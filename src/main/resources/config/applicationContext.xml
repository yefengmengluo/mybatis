<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 导入jdbc配置文件 -->
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>  
        <property name="maxStatements" value="${jdbc.maxStatements}"/>  
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/> 
		<property name="acquireRetryDelay" value="1000"></property> 
	    <property name="acquireRetryAttempts" value="30"></property> 
	    <property name="breakAfterAcquireFailure" value="false"></property>  
	</bean>
	
	<!-- 配置SqlSessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 注册实体类别名（注：因为*mapper.xml文件中配置的是全名称，所以此处可以不配置） -->
		<!-- <property name="typeAliasesPackage" value="personal.entity"/> -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml"/>
		<!-- 注册映射文件 -->
		<property name="mapperLocations" value="classpath:personal/mapper/*.xml" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="personal.mapper" />
	</bean>
	
	<!-- enable component scanning -->
	<context:component-scan base-package="personal.**">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 配置扫描组建包 -->
	<context:component-scan base-package="personal.service.*" />

</beans>